//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tp_2.WCFMMeteo {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFMMeteo.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Meteo_GetTemperature", ReplyAction="http://tempuri.org/IService/Meteo_GetTemperatureResponse")]
        string Meteo_GetTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Meteo_GetTemperature", ReplyAction="http://tempuri.org/IService/Meteo_GetTemperatureResponse")]
        System.Threading.Tasks.Task<string> Meteo_GetTemperatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Meteo_GetTemperatureByDate", ReplyAction="http://tempuri.org/IService/Meteo_GetTemperatureByDateResponse")]
        Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateResponse Meteo_GetTemperatureByDate(Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateRequest request);
        
        // CODEGEN : Génération du contrat de message dans la mesure où l'opération compte plusieurs valeurs de retour.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Meteo_GetTemperatureByDate", ReplyAction="http://tempuri.org/IService/Meteo_GetTemperatureByDateResponse")]
        System.Threading.Tasks.Task<Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateResponse> Meteo_GetTemperatureByDateAsync(Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Meteo_GetTemperatureDay", ReplyAction="http://tempuri.org/IService/Meteo_GetTemperatureDayResponse")]
        System.Data.DataSet Meteo_GetTemperatureDay(string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Meteo_GetTemperatureDay", ReplyAction="http://tempuri.org/IService/Meteo_GetTemperatureDayResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Meteo_GetTemperatureDayAsync(string time);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Meteo_GetTemperatureByDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Meteo_GetTemperatureByDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string date;
        
        public Meteo_GetTemperatureByDateRequest() {
        }
        
        public Meteo_GetTemperatureByDateRequest(string date) {
            this.date = date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Meteo_GetTemperatureByDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Meteo_GetTemperatureByDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Meteo_GetTemperatureByDateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string dateExact;
        
        public Meteo_GetTemperatureByDateResponse() {
        }
        
        public Meteo_GetTemperatureByDateResponse(string Meteo_GetTemperatureByDateResult, string dateExact) {
            this.Meteo_GetTemperatureByDateResult = Meteo_GetTemperatureByDateResult;
            this.dateExact = dateExact;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Tp_2.WCFMMeteo.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Tp_2.WCFMMeteo.IService>, Tp_2.WCFMMeteo.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Meteo_GetTemperature() {
            return base.Channel.Meteo_GetTemperature();
        }
        
        public System.Threading.Tasks.Task<string> Meteo_GetTemperatureAsync() {
            return base.Channel.Meteo_GetTemperatureAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateResponse Tp_2.WCFMMeteo.IService.Meteo_GetTemperatureByDate(Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateRequest request) {
            return base.Channel.Meteo_GetTemperatureByDate(request);
        }
        
        public string Meteo_GetTemperatureByDate(string date, out string dateExact) {
            Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateRequest inValue = new Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateRequest();
            inValue.date = date;
            Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateResponse retVal = ((Tp_2.WCFMMeteo.IService)(this)).Meteo_GetTemperatureByDate(inValue);
            dateExact = retVal.dateExact;
            return retVal.Meteo_GetTemperatureByDateResult;
        }
        
        public System.Threading.Tasks.Task<Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateResponse> Meteo_GetTemperatureByDateAsync(Tp_2.WCFMMeteo.Meteo_GetTemperatureByDateRequest request) {
            return base.Channel.Meteo_GetTemperatureByDateAsync(request);
        }
        
        public System.Data.DataSet Meteo_GetTemperatureDay(string time) {
            return base.Channel.Meteo_GetTemperatureDay(time);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Meteo_GetTemperatureDayAsync(string time) {
            return base.Channel.Meteo_GetTemperatureDayAsync(time);
        }
    }
}
